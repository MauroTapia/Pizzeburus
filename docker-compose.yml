version: '3.8'

networks:
  dmh-network:
    driver: bridge

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: pizzas_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - dmh-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    container_name: eureka-server
    build: eureka-server
    image: eureka-server
    mem_limit: 512m
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://eureka-server:8761/ || exit 1" ]
      timeout: 20s
      retries: 5
      interval: 15s
      start_period: 70s
    networks:
      - dmh-network
    ports:
      - 8761:8761

  config-server:
    container_name: config-server
    build: config-server
    image: config-server
    mem_limit: 512m
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1" ]
      timeout: 10s
      retries: 3
    networks:
      - dmh-network
    ports:
      - 8888:8888


  gateway-server:
    container_name: gateway-server
    build: gateway-server
    image: gateway-server
    mem_limit: 512m
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://eureka-server:8761/ || exit 1" ]
      timeout: 10s
      retries: 5
    networks:
      - dmh-network
    ports:
      - "9000:9000"

  users:
    container_name: user-crud
    build: user-crud
    image: user-crud
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8083/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - dmh-network
    ports:
      - "8083:8083"

  pizzas-read:
    container_name: pizzas-read
    build: pizzas-read
    image: pizzas-read
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - dmh-network
    ports:
      - "8081:8081"

  write-pizzas:
    container_name: pizzas-write
    build: pizzas-write
    image: pizzas-write
    depends_on:
      config-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8082/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - dmh-network
    ports:
      - "8082:8082"

  rabbitmq:
    image: rabbitmq:3.7.6-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - "TZ=UTC"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - dmh-network

  zipkin:
    image: openzipkin/zipkin:2.23.0
    container_name: zipkin
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "9411:9411"
    environment:
      - "TZ=UTC"
      - "RABBIT_URI=amqp://guest:guest@rabbitmq:5672"
    networks:
      - dmh-network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - dmh-network
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus


  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - dmh-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    networks:
      - dmh-network


volumes:
  postgres-data: {}
  prom_data: {}