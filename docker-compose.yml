version: '3.8'

networks:
  dmh-network:
    driver: bridge

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: pizzas_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - 5432:5432
    networks:
      - dmh-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  rabbitmq:
    image: rabbitmq:3.7.6-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - "TZ=UTC"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - dmh-network

  zipkin:
    image: openzipkin/zipkin:2.23.0
    container_name: zipkin
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "9411:9411"
    environment:
      - "TZ=UTC"
      - "RABBIT_URI=amqp://guest:guest@rabbitmq:5672"
    networks:
      - dmh-network

  # Prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus  # Asegúrate de que 'prometheus.yml' esté en esta carpeta local
      - prom_data:/prometheus

  # Grafana
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana:/etc/grafana  # Asegúrate de que los archivos estén en ./grafana

volumes:
  postgres-data: {}
  prom_data: {}